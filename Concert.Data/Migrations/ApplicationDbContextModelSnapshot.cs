// <auto-generated />
using Concert.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Concert.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Concert.Data.Entity.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "alice@example.com",
                            Name = "John",
                            UserId = "1"
                        },
                        new
                        {
                            Id = "12",
                            Email = "Chrilleeeee@example.com",
                            Name = "Chrilleeeee",
                            UserId = "12"
                        },
                        new
                        {
                            Id = "123",
                            Email = "RonniePonnie@example.com",
                            Name = "Ronnieee",
                            UserId = "123"
                        });
                });

            modelBuilder.Entity("Concert.Data.Entity.User", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Email = "John123@example.com",
                            Name = "John",
                            Password = "John123"
                        },
                        new
                        {
                            ID = "12",
                            Email = "bob@example.com",
                            Name = "Bob Bengtsson",
                            Password = "anotherpassword"
                        },
                        new
                        {
                            ID = "123",
                            Email = "bob@example.com",
                            Name = "Bob Bengtsson",
                            Password = "anotherpassword"
                        });
                });

            modelBuilder.Entity("Concert.Data.Entity.Booking", b =>
                {
                    b.HasOne("Concert.Data.Entity.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Concert.Data.Entity.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
